name: Build APK
on:
  push: { branches: [ main ] }
  pull_request: { branches: [ main ] }
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: android-app
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # Only set env; we'll install packages ourselves
      - name: Set up Android SDK (env only)
        uses: android-actions/setup-android@v3

      - name: Install Android SDK packages (robust, non-interactive)
        shell: bash
        run: |
          set -euo nounset   # intentionally NOT setting pipefail
          ANDROID_SDK_ROOT="${ANDROID_SDK_ROOT:-/usr/local/lib/android/sdk}"

          # pick an sdkmanager (bootstrap with preinstalled 16.0 if needed)
          SDKMANAGER="${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager"
          if [ ! -x "$SDKMANAGER" ]; then
            BOOT="/usr/local/lib/android/sdk/cmdline-tools/16.0/bin/sdkmanager"
            yes | "$BOOT" "cmdline-tools;latest" >/dev/null 2>&1 || true
            SDKMANAGER="${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager"
          fi

          # accept licenses; ignore broken pipe exit from `yes`
          yes | "$SDKMANAGER" --licenses >/dev/null 2>&1 || true

          # install exact packages; space-separated args avoid multi-line parsing bugs
          "$SDKMANAGER" --install "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew clean :app:assembleDebug --stacktrace --info --no-daemon

      - name: Verify APK exists
        run: test -f app/build/outputs/apk/debug/app-debug.apk

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error
